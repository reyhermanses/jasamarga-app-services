require("dotenv").config();
module.exports = {
  dev: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: true,
    migrationStorageTableSchema: "dev",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
  backup: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "backup",
    pool: {
      max: 10000,
      min: 0,
      acquire: 30000,
      idle: 100,
    },
  },
  jm_click: {
    username: process.env.DB_JMCLICK_USERNAME,
    password: process.env.DB_JMCLICK_PASSWORD,
    database: process.env.DB_JMCLICK_NAME,
    host: process.env.DB_JMCLICK_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "public",
  },
  sap_satelit: {
    username: process.env.DB_JMCLICK_USERNAME,
    password: process.env.DB_JMCLICK_PASSWORD,
    database: process.env.DB_JMCLICK_NAME,
    host: process.env.DB_JMCLICK_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "public",
  },
  dev2: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "dev2",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
  new_dev: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "new_dev",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
  dev_uat: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "dev_uat",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
  dev_testing: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "dev_testing",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
  new_dev: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "new_dev",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
  test: {
    username: "root",
    password: null,
    database: "database_test",
    host: "127.0.0.1",
    dialect: "mysql",
  },
  public: {
    username: process.env.DB_USERNAME,
    password: process.env.DB_PASSWORD,
    database: process.env.DB_NAME,
    host: process.env.DB_HOST,
    dialect: "postgres",
    logging: false,
    migrationStorageTableSchema: "public",
    pool: {
      max: 1000000,
      min: 0,
      acquire: 3000000,
      idle: 100,
    },
  },
};
